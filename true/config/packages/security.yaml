security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\AdminUser:
            algorithm: auto
        App\Entity\Client:
            algorithm: auto



    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_admin_provider:
            entity:
                class: App\Entity\AdminUser
                property: username
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Client
                property: email        # used to reload user from session & other features (e.g. switch_user)
        # used to reload user from session & other features (e.g. switch_user)
        all_user_provider:
            chain:
                providers: ['app_user_provider', 'app_admin_provider']

    firewalls:
        dev:
            pattern: ^/((profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/
            stateless: true
            provider: app_admin_provider
            json_login:
                check_path: /api/authentication_token
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            lazy: true
            provider: all_user_provider
            custom_authenticator: App\Security\LoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the first access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/account, roles: ROLE_USER }
         - { path: ^/api/docs, roles: PUBLIC_ACCESS }  # IS_AUTHENTICATED_ANONYMOUSLY #
         - { path: ^/api/authentication_token, roles: PUBLIC_ACCESS,  }  # IS_AUTHENTICATED_ANONYMOUSLY #
         - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }